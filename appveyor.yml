# vim ft=yaml
# CI on Windows via appveyor

environment:
  global:
    NP_BUILD_DEP: "numpy==1.10.4"
    NP_TEST_DEP: "numpy==1.10.4"

  matrix:
    - PYTHON: C:\Python27
    - PYTHON: C:\Python27-x64
    - PYTHON: C:\Python34
    - PYTHON: C:\Python34-x64
    - PYTHON: C:\Python35
    - PYTHON: C:\Python35-x64
    - PYTHON: C:\Python36
      NP_BUILD_DEP: "numpy==1.11.3"
      NP_TEST_DEP: "numpy==1.11.3"
    - PYTHON: C:\Python36-x64
      NP_BUILD_DEP: "numpy==1.11.3"
      NP_TEST_DEP: "numpy==1.11.3"

install:
  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - SET PATH=%PYTHON%;%PYTHON%\Scripts;%PATH%

  # Install the dependencies of the project.
  - pip install %NP_BUILD_DEP% Cython nose nibabel sympy scipy
  - pip install wheel
  - git submodule update --init
  - pip wheel .\nipy -w dist

build: false  # Not a C# project, build stuff at the test step instead.

test_script:
  # Change into an innocuous directory and find tests from installation
  - pip install %NP_TEST_DEP%
  - pip install --pre --no-index --find-links .\nipy
  - pip install -f .\dist --no-index nipy
  - mkdir for_testing
  - cd for_testing
  - python --version
  - python ..\nipy\tools\nipnost nipy

artifacts:
  # Archive the generated wheel package in the ci.appveyor.com build report.
  - path: dist\*

on_success:
  # Upload the generated wheel package to Rackspace
  # On Windows, Apache Libcloud cannot find a standard CA cert bundle so we
  # disable the ssl checks.
  - pip install wheelhouse-uploader
  - python -m wheelhouse_uploader upload --no-update-index --no-ssl-check --local-folder=dist wheels

cache:
  # Use the appveyor cache to avoid re-downloading large archives such
  # the MKL numpy and scipy wheels mirrored on a rackspace cloud
  # container, speed up the appveyor jobs and reduce bandwidth
  # usage on our rackspace account.
  - '%APPDATA%\pip\Cache'
